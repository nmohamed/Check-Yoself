{"name":"Check Yo-Self","tagline":"A python program that helps you check your form when weight lifting.","body":"# Check Yourself\r\n## Helping you prevent yourself from injuries\r\nBy Nora Mohamed (@nmohamed), Cindy Sun (@xmsun), Jason Lan (@Ziyilan), and Zarin Bhuiyan (@zbhuiyan).\r\n\r\n###Preparation and Framing\r\n\r\n**Background and context**\r\nThe goal of our project is to create a program that will teach and correct users’ postures when exercising. It utilizes OpenCV to track the movement of the user. Depending on the method of tracking you use and the way to check if you’re maintaining proper posture, this could be difficult (due to lack of accuracy). People have different shapes and sizes, so comparing to a standard body wouldn't be very accurate. There are also some things that are hard to track with a lot of accuracy, like the straightness of a back. Tkinter is the GUI\r\nYou’d be prompted to do certain stages of the exercise, following the pictures on the screen. After doing that, you’d be given time to do the exercise (which is recorded). The video of you doing the exercise is compared to pictures of you in certain stages. \r\n\r\n**Key questions**\r\n* Do you know of any relevant python libraries that aren’t difficult for people to install?\r\n* What method of tracking do you think is the most effective and within the scope of this project?\r\n* What are some other methods of comparing your posture to correct posture?\r\n\r\n**Agenda for technical review session**\r\n* Powerpoint presentation (visuals)\r\n* Technical discussion\r\n* Prototype Feedback\r\n\r\n\r\n### Project Proposal\r\n\r\n**The Big Idea**: The main idea of this project is to create a program that checks your physical form when weight lifting to help you correct it and prevent injury. We will explore the topic of physical fitness and maintaining proper posture to avoid injury. We plan on using OpenCV, a webcam, and information on weight lifting postures. Our MVP is a program that corrects your posture for one type of exercise. A stretch goal is to perfect the accuracy, and also include multiple types of exercises.\r\n\r\n**Learning Goals**: We all want to get better at Python and learn how to use OpenCV. We want to improve our knowledge of proper form for exercising. We want to get better at designing the framework for programming, and creating/following a viable schedule. We want to also learn how to program in team efficiently and effectively. \r\n\r\n**Implementation Plan**: We want to use OpenCV and Pygame to draw on top of the image of the user. We can use a GUI for deciding on the type of exercise you’re doing, if we get to the point of doing multiple exercises. How our program should work: you stand in front of your webcam, do your exercise, and the program will mark red the areas where your posture is incorrect.\r\n\r\n**Project schedule**: You have 6 weeks (roughly) to finish the project.  Sketch out a rough schedule for completing the project.  Depending on your project, you may be able to do this in great specificity or you may only be able to give a broad outline.  Additionally, longer projects come with increased uncertainty, and this schedule will likely need to be refined along the way.\r\n\r\nPreliminary schedule (subject to change):\r\n\r\nWeek 1\r\nObjective: Research OpenCV, methods to track movement, film ourselves doing exercises, create GUI framework\r\nDeliverable: Have a GUI, have videos of the exercises\r\n\r\nWeek 2\r\nObjective: Video Processing, Tracking Movement (Pushup), Finalize methods of processing video (computer animation v. stock video for tutorial; motion capture v. comparing videos)\r\nDeliverable: Take picture of you in different positions of exercise\r\nBe able to register key parts of your body (back, knee/elbow angles, etc.)\r\n\r\nWeek 3\r\nObjective: Video Processing, Tracking Movement (Pushup)\r\nDeliverable: Determine which points of the body to analyze\r\nCompare your pushup to correct/proper form\r\n\r\nWeek 4\r\nObjective: Finalize Pushup, Add two/three new exercises, Update GUI\r\nDeliverable: Figure out for sure how to compare your pushup and provide analysis/feedback\r\n\r\nWeek 5\r\nObjective: Finalize Pushup, Add two/three new exercises, Update GUI\r\nDeliverable: TBD*\r\n\r\nWeek 6\r\nObjective: Add exercises, debug/testing, comment and clean up code, push to github\r\nDeliverable: TBD*\r\n\r\nMeeting Times: SLAC 8:00-X, Sunday 8:00 PM, and other days for when we separate into subteams\r\n\r\n*The deliverables for the last two weeks depends on our progress on pushups at that point. If feasible, we will add additional exercises.\r\n\r\n**Collaboration plan**: We plan to spend the set meeting times to all work together and make sure everyone’s code works with each other’s. We plan to properly use Github branches as people in the industry use it. We will probably separate into subteams of 2 teams of 2 eventually, where those subteams will decide on when to meet (since it’s easier to coordinate meetings). We want to use pair programming, since we think it is an effective method to programming in pairs.\r\n\r\n**Risks**: Hurting ourselves when trying to test the program, not getting OpenCV to work the way we will need it to, not knowing how to code what we want to code and general library/python problems. Efficiently sharing our code on GitHub might also be difficult. We will also need to make sure we have a schedule with which we can implement and combine everything with timeliness.\r\n\r\n**Additional Course Content**: More details on OpenCV (motion tracking, image comparison) would be useful to do in class.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}